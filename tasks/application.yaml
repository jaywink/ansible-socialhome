---
- name: Make sure home directory is owned by user
  file: path=/home/{{ socialhome_os_user }}/socialhome owner="{{ socialhome_os_user }}" group="{{ socialhome_os_user }}" recurse=yes state=directory
- name: Make sure venv directory is owned by user
  file: path=/home/{{ socialhome_os_user }}/venv owner="{{ socialhome_os_user }}" group="{{ socialhome_os_user }}" recurse=yes state=directory
- name: Get latest application code
  git: accept_hostkey=yes dest=/home/{{ socialhome_os_user }}/socialhome repo="{{ socialhome_repo }}" force=yes version="{{ socialhome_repo_version }}"
  become_user: "{{ socialhome_os_user }}"
  notify:
    - restart circus

- name: Stop socialhome Circus
  service: name="{{ socialhome_domain }}-circus" state=stopped
  notify:
    - restart circus
- name: Install app OS requirements
  shell: chdir=/home/{{ socialhome_os_user }}/socialhome/ executable=/bin/bash ./install_ubuntu_dependencies.sh install
  notify:
    - restart circus

- name: Sync app requirements
  command: chdir=/home/{{ socialhome_os_user }}/socialhome /home/{{ socialhome_os_user }}/venv/bin/pip-sync
  become_user: "{{ socialhome_os_user }}"
  notify:
    - restart circus

- name: Create env file
  template: dest=/home/{{ socialhome_os_user }}/socialhome/.env src=env mode=0600
  become_user: "{{ socialhome_os_user }}"
  notify:
    - restart circus
- name: Migrate db
  django_manage: app_path=/home/{{ socialhome_os_user }}/socialhome command="migrate --noinput" virtualenv=/home/{{ socialhome_os_user }}/venv
  become_user: "{{ socialhome_os_user }}"
  notify:
    - restart circus

# Search index if first time
- name: Check for existing search index
  stat: path=/home/{{ socialhome_os_user }}/socialhome/var/whoosh
  register: _whoosh
- name: Create initial search index
  django_manage: app_path=/home/{{ socialhome_os_user }}/socialhome command="rebuild_index --noinput" virtualenv=/home/{{ socialhome_os_user }}/venv
  become_user: "{{ socialhome_os_user }}"
  when: not _whoosh.stat.exists

# Web stuff
- name: Do NPM install
  npm: path=/home/{{ socialhome_os_user }}/socialhome state=latest
  become_user: "{{ socialhome_os_user }}"

- name: Do bowering
  bower: path=/home/{{ socialhome_os_user }}/socialhome state=latest relative_execpath=node_modules/.bin
  become_user: "{{ socialhome_os_user }}"

- name: Webpack
  command: chdir=/home/{{ socialhome_os_user }}/socialhome npm run build
  become_user: "{{ socialhome_os_user }}"

- name: Collect statics
  django_manage: app_path=/home/{{ socialhome_os_user }}/socialhome command="collectstatic --no-input" virtualenv=/home/{{ socialhome_os_user }}/venv
  become_user: "{{ socialhome_os_user }}"
  notify:
    - restart circus
